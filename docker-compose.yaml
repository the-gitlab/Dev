version: '3.8'

services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

  mdb:
    container_name: mdb
    image: mongo:3.6.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ./mongo/init.js:/docker-entrypoint-initdb.d/init.js
   

  web:
    container_name: web
    build:
      context: ./web
    volumes:
      - ./web/www:/var/www/html
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MONGODB_HOST: ${MONGODB_HOST}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MAUTH_DB: ${MAUTH_DB}
    ports:
      - '80:80'
    depends_on:
      - mysql
      - mdb

  web-dev:
    container_name: web-dev
    build:
      context: ./web-dev
    volumes:
      - ./web-dev/www:/var/www/html
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MONGODB_HOST: ${MONGODB_HOST}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - '81:80'
      - '9000:9000'
    depends_on:
      - mysql
      - mdb
  
networks:
    cont:
        driver:  bridge
        enable_ipv6: false